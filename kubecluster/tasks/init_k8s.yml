---
- name: Start Kubelet service
  loop:
    - kubelet
    - containerd
  ansible.builtin.service:
    name: "{{item}}"
    state: restarted
    enabled: true

- name: Configure containerd
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml

- name: Enable Systemd Cgroups for containerd
  ansible.builtin.replace:
     path: /etc/containerd/config.toml
     regexp: ^\s*SystemdCgroup.*false.*$
     replace: '            SystemdCgroup = true'

- name: Restart containerd
  ansible.builtin.service:
     name: containerd
     state: restarted

- name: Docker Pull Kube Master images to Control Plane node
  when: " 'control' in inventory_hostname"
  ansible.builtin.shell: kubeadm config images pull
  register: kubeadm_controlplaneinit

- name: View Results
  when: " 'control' in inventory_hostname"
  ansible.builtin.debug:
    var: kubeadm_controlplaneinit

- name: Kubeadm Initialize POD network
  when: " 'control' in inventory_hostname"
  ansible.builtin.shell: kubeadm init --pod-network-cidr={{pod_net_cidr}} --service-cidr={{service_net_cidr}} --service-dns-domain={{service_dns_domain}}
  register: kubeadm_podnetinit

- name: View Results of Initialization of Master
  when: " 'control' in inventory_hostname"
  ansible.builtin.debug:
    var: kubeadm_podnetinit

- name: Get Token to join workers to control-plane
  when: " 'control' in inventory_hostname"
  ansible.builtin.shell:  "kubeadm token list |grep -v TOKEN |awk '{print $1}' "
  register: join_node_token

- name: Set Token as Fact
  when: " 'control' in inventory_hostname"
  ansible.builtin.debug:
     var: join_node_token

- name: Set Token as Fact
  when: " 'control' in inventory_hostname"
  ansible.builtin.set_fact:
     join_token: "{{join_node_token.stdout}}"
